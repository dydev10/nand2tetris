// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    Not(in= reset, out=notR );
    Not(in= load, out=notL );
    
    Or(a= inc, b= load, out= incOrLoad);
    And(a= incOrLoad, b= notR, out= msbSel);

    And(a= inc, b= notL, out= incNotLoad);
    And(a= incNotLoad, b= notR, out= lsbSel);

    Inc16(in= regOut, out= regC);
    Mux4Way16(a[0..15]= false, b= regOut, c= in, d= regC, sel[0]= lsbSel, sel[1]= msbSel, out= regIn);

    Register(in= regIn, load= true, out= regOut, out=out);
}
